/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        select-end-of-line {
            bindings = <&kp LG(LS(RIGHT))>;
            key-positions = <38 3>;
            layers = <0>;
            timeout-ms = <500>;
        };

        select-beginning-of-line {
            bindings = <&kp LG(LS(LEFT_ARROW))>;
            key-positions = <38 2>;
            layers = <0>;
            timeout-ms = <500>;
        };

        switch-tabs-right {
            bindings = <&kp LG(RA(RIGHT))>;
            key-positions = <16 21>;
            timeout-ms = <500>;
            layers = <1>;
        };

        switch-tab-left {
            bindings = <&kp LG(RA(LEFT_ARROW))>;
            key-positions = <16 19>;
            timeout-ms = <500>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | LWR | SPC | GUI |   | ENT | RSE  | SHFT|

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R      &kp T       &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D  &kp F      &kp G       &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V      &kp B       &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &mo 1  &kp SPACE  &kp LGUI    &kp RET  &mo 2  &kp LSHFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   | MUTE|     | UP  |VLDN |VLUP | BKSP |
            // | CTRL |  6  |  7  |  8  |  9  |  0  |   |     | LFT | DWN | RGT |     |      |
            // | SHFT | ALT | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
            //                    | GUI |     | GUI |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1    &kp N2        &kp N3        &kp N4        &kp N5          &kp C_MUTE  &trans    &kp UP    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp BSPC
&kp LCTRL  &kp N6    &kp N7        &kp N8        &kp N9        &kp N0          &trans      &kp LEFT  &kp DOWN  &kp RIGHT          &trans           &trans
&kp LSHFT  &kp RALT  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans      &trans    &trans    &trans             &trans           &trans
                                   &kp SPACE     &trans        &kp LGUI        &kp RET     &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |  ?  |  <  |  >  |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL      &kp AT         &kp HASH          &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp QUESTION  &kp LESS_THAN  &kp GREATER_THAN  &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans        &trans         &trans            &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                        &kp LGUI          &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
